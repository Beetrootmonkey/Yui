import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'

def versionObj = new Version(major: 2, minor: 0, revision: 0)
archivesBaseName = "Yui"
version = "${versionObj.toString()}"

//sourceCompatibility = 1.8
//targetCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

jar {
    baseName = project.name
    manifest {
        attributes 'Implementation-Version': version
        attributes 'Main-Class': "net.dv8tion.yui.Core"
    }
}

allprojects {

    repositories {
        jcenter()
    }
}

dependencies {
    compile "net.dv8tion:JDA:2.2.0_341"
//    compile "net.lingala.zip4j:zip4j:1.3.2"
//    compile "org.xerial:sqlite-jdbc:3.8.11.2"
//    compile "org.pircbotx:pircbotx:2.0.1"
//    compile "commons-io:commons-io:2.4"
    compile "org.xeustechnologies:jcl-core:2.7"
    compile "com.google.guava:guava:19.0"
}

project(":plugin") {

    subprojects {
        apply plugin: 'java'

        group = "net.dv8tion"

        dependencies {
            compile rootProject
        }
    }
}

project(':plugin:test') {
    apply plugin: 'com.github.johnrengelman.shadow'

    shadowJar {

    }
}

class Version {
    int major, minor, revision

    String getMajor() {
        "${major}"
    }

    String getMinor() {
        "${minor}"
    }

    String getRevision() {
        "${revision}"
    }

    String getBuild() {
        System.getenv("BUILD_NUMBER") ? System.getenv("BUILD_NUMBER") : "DEV"
    }

    String toString() {
        "${getMajor()}.${getMinor()}.${getRevision()}_${getBuild()}"
    }
}
